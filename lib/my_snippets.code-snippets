{
	"local": {
	  "scope": "flutter,dart",
	  "prefix": "local",
	  "body": ["AppLocalizations.of(context).$1"]
	},

	"convertFormClass": {
	  "scope": "flutter,dart",
	  "prefix": "convertFormClass",
	  "body": [
		"class Data$1Form {",
		"   late TextEditingController data1, data2, data3, data4, data5, data6, data7, data8, data9, data10;",
		"",
		"   Data$1Form([Data$1? data]) {",
		"     data1 = TextEditingController(text: data?.data1);",
		"     data2 = TextEditingController(text: data?.data2);",
		"     data3 = TextEditingController(text: data?.data3);",
		"     data4 = TextEditingController(text: data?.data4);",
		"     data5 = TextEditingController(text: data?.data5);",
		"     data6 = TextEditingController(text: data?.data6);",
		"     data7 = TextEditingController(text: data?.data7);",
		"     data8 = TextEditingController(text: data?.data8);",
		"     data9 = TextEditingController(text: data?.data9);",
		"     data10 = TextEditingController(text: data?.data10);",
		"   }",
		"",
		"   Map<String, dynamic> toSend() {",
		"     return {",
		"      'data1': data1.value.text,",
		"      'data2': data2.value.text,",
		"      'data3': data3.value.text,",
		"      'data4': data4.value.text,",
		"      'data5': data5.value.text,",
		"      'data6': data6.value.text,",
		"      'data7': data7.value.text,",
		"      'data8': data8.value.text,",
		"      'data9': data9.value.text,",
		"      'data10': data10.value.text,",
		"     };",
		"   }",
		" }"
	  ],
	  "description": "convertFormClass"
	},

	"dclassMongo": {
	  "scope": "flutter,dart",
	  "prefix": "dclassMongo",
	  "body": [
		"class Data$1 {",
		"  late String id;",
		"  ",
		"  late DateTime createdAt;",
		"  late DateTime updatedAt;",
		"  Data$1.fromJson(Map<String, dynamic> data) {",
		"    id = convertData(data, '_id', DataType.string);",
		"    ",
		"    createdAt = convertData(data, 'createdAt', DataType.datetime);",
		"    updatedAt = convertData(data, 'updatedAt', DataType.datetime);",
		"  }",
		"}"
	  ],
	  "description": "dclassMongo"
	},

	"convertcifNull": {
	  "scope": "flutter,dart",
	  "prefix": "convertcifNull",
	  "body": [
		"if (data.containsKey('$1') && data['$1'] != null) {",
		"  if (data['$1'] is! String) {",
		"    $1 = convertData(data, '$1', DataType.clas, classType: '$2');",
		"    $1Id = $1!.id;",
		"  } else {",
		"    $1Id = convertData(data, '$1', DataType.string);",
		"  }",
		"}"
	  ],
	  "description": "convertcif"
	},
	"convertcif": {
	  "scope": "flutter,dart",
	  "prefix": "convertcif",
	  "body": [
		"if (data['$1'] is! String) {",
		"  $1 = convertData(data, '$1', DataType.clas, classType: '$2');",
		"  $1Id = $1!.id;",
		"} else {",
		"  $1Id = convertData(data, '$1', DataType.string);",
		"}"
	  ],
	  "description": "convertcif"
	},

	"makeD": {
	  "scope": "flutter,dart",
	  "prefix": "makeD",
	  "body": [
		"toolsMakeDate(",
		"  isJalali: true,",
		"  dateIsJalali: false,",
		"  isWeekDay: ${2|true,false|},",
		"  date: $1)"
	  ],
	  "description": "toolsMakeDate"
	},

	"msd": {
	  "scope": "flutter,dart",
	  "prefix": "msd",
	  "body": ["Map<String,dynamic> "],
	  "description": "Map<String,dynamic>"
	},

	"re": {
	  "scope": "flutter,dart",
	  "prefix": "re",
	  "body": ["ToolsRowExpand(firstSpace: true, children: [", "   $1", "]),"],
	  "description": "ToolsRowExpand"
	},
	"ref": {
	  "scope": "flutter,dart",
	  "prefix": "ref",
	  "body": [
		"ToolsRowExpandForce(firstSpace: true, children: [",
		"   $1",
		"]),"
	  ],
	  "description": "ToolsRowExpandForce"
	},
	"zero": {
	  "scope": "flutter,dart",
	  "prefix": "zero",
	  "body": ["EdgeInsets.zero"],
	  "description": "EdgeInsets.zero"
	},
	"text": {
	  "scope": "flutter,dart",
	  "prefix": "text",
	  "body": [
		"ToolsText('$1',",
		"    style: toolstitleStyle(",
		"        color: black1)),"
	  ],
	  "description": "ToolsText('$1',style: toolstitleStyle(olor: black1)),"
	},
	"textc": {
	  "scope": "flutter,dart",
	  "prefix": "textc",
	  "body": [
		"ToolsText('$1',",
		"    style: toolscontentStyle(",
		"        color: black1)),"
	  ],
	  "description": "ToolsText('$1',style: toolscontentStyle(olor: black1)),"
	},

	"mainb": {
	  "scope": "flutter,dart",
	  "prefix": "mainb",
	  "body": [
		"mainAxisAlignment: MainAxisAlignment.${2|spaceBetween,spaceAround,spaceEvenly,start,center,end|},"
	  ],
	  "description": "mainb"
	},

	"maina": {
	  "scope": "flutter,dart",
	  "prefix": "maina",
	  "body": [
		"mainAxisAlignment: MainAxisAlignment.${2|spaceAround,spaceBetween,spaceEvenly,start,center,end|},"
	  ],
	  "description": "maina"
	},
	"mainc": {
	  "scope": "flutter,dart",
	  "prefix": "mainc",
	  "body": [
		"mainAxisAlignment: MainAxisAlignment.${2|center,spaceBetween,spaceAround,spaceEvenly,start,end|},"
	  ],
	  "description": "mainc"
	},

	"min": {
	  "scope": "flutter,dart",
	  "prefix": "min",
	  "body": ["mainAxisSize: MainAxisSize.${2|min,max|},"],
	  "description": "mainAxisSize"
	},

	"rtl": {
	  "scope": "flutter,dart",
	  "prefix": "rtl",
	  "body": ["textDirection: TextDirection.rtl,"],
	  "description": "rtl"
	},
	"ltr": {
	  "scope": "flutter,dart",
	  "prefix": "ltr",
	  "body": ["textDirection: TextDirection.ltr,"],
	  "description": "ltr"
	},

	"rtld": {
	  "scope": "flutter,dart",
	  "prefix": "rtld",
	  "body": ["Directionality(", "textDirection: TextDirection.rtl,"],
	  "description": "rtld"
	},
	"ltrd": {
	  "scope": "flutter,dart",
	  "prefix": "ltrd",
	  "body": ["Directionality(", "textDirection: TextDirection.ltr,"],
	  "description": "ltrd"
	},

	"rad": {
	  "scope": "flutter,dart",
	  "prefix": "rad",
	  "body": ["borderRadius: BorderRadius.circular($1),"],
	  "description": "rad"
	},
	"cross": {
	  "scope": "flutter,dart",
	  "prefix": "cross",
	  "body": [
		"crossAxisAlignment: CrossAxisAlignment.${2|start,center,end,stretch,baseline|},"
	  ],
	  "description": "cross"
	},

	"inf": {
	  "scope": "flutter,dart",
	  "prefix": "inf",
	  "body": ["double.maxFinite"],
	  "description": "inf"
	},
	"non": {
	  "scope": "flutter,dart",
	  "prefix": "non",
	  "body": ["const SizedBox.shrink(),"],
	  "description": "non"
	},

	"border": {
	  "scope": "flutter,dart",
	  "prefix": "border",
	  "body": ["border: Border.all(width: 1,color: Colors.black),"],
	  "description": "border"
	},
	"box": {
	  "scope": "flutter,dart",
	  "prefix": "box",
	  "body": [
		"Container(",
		"decoration: BoxDecoration(",
		"  border: Border.all(width: 1,color: Colors.black),",
		"  borderRadius: BorderRadius.circular(10),",
		"),",
		"padding: EdgeInsets.symmetric(",
		"  horizontal: 2.w,",
		"  vertical: 1.h",
		"),",
		"  child: $1,",
		"),"
	  ],
	  "description": "box"
	},

	"convertc": {
	  "scope": "flutter,dart",
	  "prefix": "convertc",
	  "body": ["$1 = convertData(data, '$1', DataType.clas, classType: '$2');"],
	  "description": "convertc"
	},
	"convert": {
	  "scope": "flutter,dart",
	  "prefix": "convert",
	  "body": ["convertData(data, '$1', DataType.string);"],
	  "description": "convert"
	},
	"convert1": {
	  "scope": "flutter,dart",
	  "prefix": "convert1",
	  "body": ["$1=convertData(data, '$2', DataType.string);"],
	  "description": "convert1"
	},
	"convert2": {
	  "scope": "flutter,dart",
	  "prefix": "conver2",
	  "body": ["$1=convertData(data, '$1', DataType.string);"],
	  "description": "conver2"
	},

	"convertl": {
	  "scope": "flutter,dart",
	  "prefix": "convertl",
	  "body": ["convertDataList<$2>(data, '$1', '$2');"],
	  "description": "convertl"
	},
	"convertl2": {
	  "scope": "flutter,dart",
	  "prefix": "convertl2",
	  "body": ["$1=convertDataList<$2>(data, '$1', '$2');"],
	  "description": "convertl2"
	},
	"convertlraw": {
	  "scope": "flutter,dart",
	  "prefix": "convertlraw",
	  "body": ["convertDataListRaw<$1>(data, '$1');"],
	  "description": "convertlraw"
	},
	"convertlraw2": {
	  "scope": "flutter,dart",
	  "prefix": "convertlraw2",
	  "body": ["$1=convertDataListRaw<$1>(data, '$1');"],
	  "description": "convertlraw2"
	},

	"for": {
	  "scope": "flutter,dart",
	  "prefix": "for",
	  "body": ["for(int j=0;j<$1.length;j++){", "", "}"],
	  "description": "for"
	},

	"state_default": {
	  "scope": "flutter,dart",
	  "prefix": "default_state",
	  "body": [
		"import 'package:flutter/material.dart';",
		"",
		"class $1State extends ChangeNotifier {",
		"",
		"void notify() => notifyListeners();",
		"",
		"init() {",
		"",
		"}",
		"}"
	  ],
	  "description": "default_state"
	},
	"stful_my_list": {
	  "scope": "flutter,dart",
	  "prefix": "stful_my_list",
	  "body": [
		"import 'package:flutter/material.dart';",
		"import 'package:tools/ui.dart';",
		"",
		"class $1 extends StatefulWidget {",
		"  const $1({Key? key}) : super(key: key);",
		"",
		"  @override",
		"  State<$1> createState() => _$1State();",
		"}",
		"",
		"class _$1State extends State<$1> {",
		"  List list = [];",
		"  bool loading = true;",
		"",
		"  @override",
		"  void initState() {",
		"    super.initState();",
		"    getData();",
		"  }",
		"",
		"  getData() async {",
		"    if (loading == false) {",
		"      setState(() {",
		"        loading = true;",
		"      });",
		"    }",
		"    //TODO await",
		"",
		"    setState(() {",
		"      loading = false;",
		"    });",
		"  }",
		"",
		"  @override",
		"  Widget build(BuildContext context) {",
		"    return Scaffold(",
		"      appBar: AppBar(),",
		"      body: loading ? toolscircleLoader() : const SizedBox.shrink(),",
		"    );",
		"  }",
		"}"
	  ],
	  "description": "stful_my_list"
	},
	"stful_my": {
	  "scope": "flutter,dart",
	  "prefix": "stful_my",
	  "body": [
		"import 'package:flutter/material.dart';",

		"class $1 extends StatefulWidget {",
		"    const $1({Key? key}) : super(key: key);",
		"",
		"  @override",
		"  State<$1> createState() => _$1State();",
		"}",
		"",
		"class _$1State extends State<$1> {",
		"    @override",
		"    Widget build(BuildContext context) {",
		"    return Scaffold(",
		"        $2",
		"      );",
		"    }",
		"}"
	  ],
	  "description": "stful_my"
	},

	"stless_my": {
	  "scope": "flutter,dart",
	  "prefix": "stless_my",
	  "body": [
		"import 'package:flutter/material.dart';",
		"",
		"class $1 extends StatelessWidget {",
		"    const $1({Key? key}) : super(key: key);",
		"",
		"  @override",
		"  Widget build(BuildContext context) {",
		"    return Container();",
		"    }",
		"}"
	  ],
	  "description": "stless_my"
	},

	"inputDate": {
	  "scope": "flutter,dart",
	  "prefix": "inputDate",
	  "body": ["DateTime? $1;"],
	  "description": "inputDate"
	},
	"inputDateW": {
	  "scope": "flutter,dart",
	  "prefix": "inputDateW",
	  "body": [
		"ToolsInputDate(",
		"text: '$1',",
		"onChange: (year, month, day) {",
		"DateTime tempDate = DateTime(year, month, day);",
		"$2 = tempDate;",
		"state.notify();",
		"},",
		"showText: $2 != null",
		"? ToolsText(toolsMakeDate(",
		"isJalali: false, date: $2))",
		": null),"
	  ],
	  "description": "inputDateW"
	},

	"inputText": {
	  "scope": "flutter,dart",
	  "prefix": "inputText",
	  "body": ["TextEditingController $1 = TextEditingController();"],
	  "description": "inputText"
	},
	"inputTextW": {
	  "scope": "flutter,dart",
	  "prefix": "inputTextW",
	  "body": [
		"ToolsInput(",
		"textDirection: TextDirection.rtl,",
		"controller: $2,",
		"labelText: '$1',",
		"),"
	  ],
	  "description": "inputTextW"
	},
	"inputTextWN": {
	  "scope": "flutter,dart",
	  "prefix": "inputTextWN",
	  "body": [
		"ToolsInput(",
		"textDirection: TextDirection.ltr,",
		"decorDirection: TextDirection.rtl,",
		"keyboardType: TextInputType.number,",
		"controller: $2,",
		"labelText: '$1',",
		"),"
	  ],
	  "description": "inputTextWN"
	},

	"inputPopUp": {
	  "scope": "flutter,dart",
	  "prefix": "inputPopUp",
	  "body": [
		"ToolsDataPopUp<String> $1 = ToolsDataPopUp(  ",
		"['1', '2', '3', '4', '5'],",
		"null,",
		"enables: []",
		");"
	  ],
	  "description": "inputPopUp"
	},
	"inputPopUpW": {
	  "scope": "flutter,dart",
	  "prefix": "inputPopUpW",
	  "body": [
		"ToolsPopUp<String>(",
		"textDirection: TextDirection.rtl,",
		"title: const Text('$1'),",
		"data: $2,",
		"onSelected: (String e) {",
		"if ($2.enables.contains(e)) {",
		"  $2.enables.remove(e);",
		"} else {",
		" $2.enables.add(e);",
		"}",
		"state.notify();",
		"}),"
	  ],
	  "description": "inputPopUpW"
	},

	"inputDropDown": {
	  "scope": "flutter,dart",
	  "prefix": "inputDropDown",
	  "body": [
		"ToolsDataDropDown<String> $1 = ToolsDataDropDown(",
		"['1', '2', '3', '4'],",
		"null,",
		");"
	  ],
	  "description": "inputDropDown"
	},
	"inputDropDownW": {
	  "scope": "flutter,dart",
	  "prefix": "inputDropDownW",
	  "body": [
		"ToolsDropDown<String>(",
		"isExpanded: true,",
		"hint: const Text('$1'),",
		"onChanged: (String e) {",
		"$2.value = e;",
		"state.notify();",
		"},",
		"data: $2),"
	  ],
	  "description": "inputDropDownW"
	},

	"inputTwoData": {
	  "scope": "flutter,dart",
	  "prefix": "inputTwoData",
	  "body": ["ToolsDataTwo<int> $1 = ToolsDataTwo(start: 1, end: 2);"],
	  "description": "inputTwoData"
	},
	"inputTwoDataW": {
	  "scope": "flutter,dart",
	  "prefix": "inputTwoDataW",
	  "body": [
		"ToolsInputTwoData(",
		"    title: Text('$1',",
		"        style: toolstitleStyle(num: 3)),",
		"    onChangedStart: (e) {",
		"      $2.start = int.parse(e);",
		"    },",
		"    onChangedEnd: (e) {",
		"      $2.end = int.parse(e);",
		"    },",
		"),"
	  ],
	  "description": "inputTwoDataW"
	},

	"inputSwitch": {
	  "scope": "flutter,dart",
	  "prefix": "inputSwitch",
	  "body": ["bool $1 = false;"],
	  "description": "inputSwitch"
	},
	"inputSwitchW": {
	  "scope": "flutter,dart",
	  "prefix": "inputSwitchW",
	  "body": [
		"ToolsSwitch(",
		"onChanged: (bool e) {",
		"  $2 = e;",
		"  state.notify();",
		"},",
		"value: $2,",
		"isMaterial: false,",
		"text: '$1',",
		"textStyle: toolstitleStyle(num: 3)",
		"    .copyWith(color: black1),",
		"),"
	  ],
	  "description": "inputSwitchW"
	},
	"consumer": {
	  "scope": "flutter,dart",
	  "prefix": "consumer",
	  "body": [
		"return Consumer<$1State>(",
		"builder: (context, state, child) {",
		"$2",
		"},",
		");"
	  ],
	  "description": "consumer"
	},

	"alertdelete": {
	  "scope": "flutter,dart",
	  "prefix": "alertdelete",
	  "body": ["if((await toolsAlertDelete(context, strS: '$1'))==false)return;"],
	  "description": "alertdelete"
	},
	"default": {
	  "scope": "flutter,dart",
	  "prefix": "default",
	  "body": ["default"],
	  "description": "default"
	}
  }
